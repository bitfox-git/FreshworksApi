name: CI&CD .NET Core
on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: [ windows-latest ]
    strategy:
      matrix:
        # Use lts, maintenance, current, and preview version.
        # Learn more, see https://github.com/dotnet/core/blob/master/release-notes/releases-index.json
        dotnet-version: ['5.0']
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }} 
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
  
  release:
    name: Release
    runs-on: [ ubuntu-latest ]
    needs: [build]
    steps:
    
    - if: ${{ contains(github.ref, 'main') }}
      name: Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        title:  Release ${{ github.event.head_commit.message }}
        prerelease: false
        draft: false
#     - if: ${{ contains(github.ref, 'main') }}
#       name: Pack
#       run: dotnet pack --configuration Release -p:PackageVersion=1.0.37
#     - if: ${{ contains(github.ref, 'main') }}
#       name: Push
#       run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_DEPLOY_KEY }} --no-symbols 1
        
    - if: ${{ !contains(github.ref, 'main') }}
      name: Create Pre-Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        title:  Pre-Release ${{ github.event.head_commit.message }}
        prerelease: true
        draft: false
